

Terminals which are not used:

   CONSTANT
   STRING_LITERAL
   SIZEOF
   PTR_OP
   TYPE_NAME
   '?'


Conflict in state 246 between rule 132 and token ELSE resolved as shift.

Grammar
rule 1    Program -> translation_unit
rule 2    primary_expression -> IDENTIFIER
rule 3    primary_expression -> TRUE
rule 4    primary_expression -> FALSE
rule 5    primary_expression -> CONSTANT_INT
rule 6    primary_expression -> CONSTANT_DOUBLE
rule 7    primary_expression -> '(' expression ')'
rule 8    postfix_expression -> primary_expression
rule 9    postfix_expression -> postfix_expression '[' expression ']'
rule 10   postfix_expression -> postfix_expression '(' ')'
rule 11   postfix_expression -> postfix_expression '(' argument_expression_list ')'
rule 12   postfix_expression -> postfix_expression INC_OP
rule 13   postfix_expression -> postfix_expression DEC_OP
rule 14   argument_expression_list -> assignment_expression
rule 15   argument_expression_list -> argument_expression_list ',' assignment_expression
rule 16   unary_expression -> postfix_expression
rule 17   unary_expression -> INC_OP unary_expression
rule 18   unary_expression -> DEC_OP unary_expression
rule 19   unary_expression -> unary_operator unary_expression
rule 20   unary_operator -> '+'
rule 21   unary_operator -> '-'
rule 22   unary_operator -> '~'
rule 23   unary_operator -> '!'
rule 24   multiplicative_expression -> unary_expression
rule 25   multiplicative_expression -> multiplicative_expression '*' unary_expression
rule 26   multiplicative_expression -> multiplicative_expression '/' unary_expression
rule 27   multiplicative_expression -> multiplicative_expression '%' unary_expression
rule 28   additive_expression -> multiplicative_expression
rule 29   additive_expression -> additive_expression '+' multiplicative_expression
rule 30   additive_expression -> additive_expression '-' multiplicative_expression
rule 31   shift_expression -> additive_expression
rule 32   shift_expression -> shift_expression LEFT_OP additive_expression
rule 33   shift_expression -> shift_expression RIGHT_OP additive_expression
rule 34   relational_expression -> shift_expression
rule 35   relational_expression -> relational_expression '<' shift_expression
rule 36   relational_expression -> relational_expression '>' shift_expression
rule 37   relational_expression -> relational_expression LE_OP shift_expression
rule 38   relational_expression -> relational_expression GE_OP shift_expression
rule 39   equality_expression -> relational_expression
rule 40   equality_expression -> equality_expression EQ_OP relational_expression
rule 41   equality_expression -> equality_expression NE_OP relational_expression
rule 42   and_expression -> equality_expression
rule 43   and_expression -> and_expression '&' equality_expression
rule 44   exclusive_or_expression -> and_expression
rule 45   exclusive_or_expression -> exclusive_or_expression '^' and_expression
rule 46   inclusive_or_expression -> exclusive_or_expression
rule 47   inclusive_or_expression -> inclusive_or_expression '|' exclusive_or_expression
rule 48   logical_and_expression -> inclusive_or_expression
rule 49   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
rule 50   logical_or_expression -> logical_and_expression
rule 51   logical_or_expression -> logical_or_expression OR_OP logical_and_expression
rule 52   assignment_expression -> logical_or_expression
rule 53   assignment_expression -> unary_expression assignment_operator assignment_expression
rule 54   assignment_operator -> '='
rule 55   assignment_operator -> MUL_ASSIGN
rule 56   assignment_operator -> DIV_ASSIGN
rule 57   assignment_operator -> MOD_ASSIGN
rule 58   assignment_operator -> ADD_ASSIGN
rule 59   assignment_operator -> SUB_ASSIGN
rule 60   assignment_operator -> LEFT_ASSIGN
rule 61   assignment_operator -> RIGHT_ASSIGN
rule 62   assignment_operator -> AND_ASSIGN
rule 63   assignment_operator -> XOR_ASSIGN
rule 64   assignment_operator -> OR_ASSIGN
rule 65   expression -> assignment_expression
rule 66   expression -> expression ',' assignment_expression
rule 67   declaration -> type_specifier ';'
rule 68   declaration -> type_specifier init_declarator_list ';'
rule 69   init_declarator_list -> init_declarator
rule 70   init_declarator_list -> init_declarator_list ',' init_declarator
rule 71   init_declarator -> declarator
rule 72   init_declarator -> declarator '=' initializer
rule 73   type_specifier -> VOID
rule 74   type_specifier -> CHAR
rule 75   type_specifier -> INT
rule 76   type_specifier -> DOUBLE
rule 77   type_specifier -> BOOL
rule 78   declarator -> IDENTIFIER
rule 79   declarator -> '(' declarator ')'
rule 80   declarator -> declarator '[' assignment_expression ']'
rule 81   declarator -> declarator '[' '*' ']'
rule 82   declarator -> declarator '[' ']'
rule 83   declarator -> declarator '(' parameter_list ')'
rule 84   declarator -> declarator '(' identifier_list ')'
rule 85   declarator -> declarator '(' ')'
rule 86   parameter_list -> parameter_declaration
rule 87   parameter_list -> parameter_list ',' parameter_declaration
rule 88   parameter_declaration -> type_specifier declarator
rule 89   parameter_declaration -> type_specifier abstract_declarator
rule 90   parameter_declaration -> type_specifier
rule 91   identifier_list -> IDENTIFIER
rule 92   identifier_list -> identifier_list ',' IDENTIFIER
rule 93   abstract_declarator -> '(' abstract_declarator ')'
rule 94   abstract_declarator -> '[' ']'
rule 95   abstract_declarator -> '[' assignment_expression ']'
rule 96   abstract_declarator -> abstract_declarator '[' ']'
rule 97   abstract_declarator -> abstract_declarator '[' assignment_expression ']'
rule 98   abstract_declarator -> '[' '*' ']'
rule 99   abstract_declarator -> abstract_declarator '[' '*' ']'
rule 100  abstract_declarator -> '(' ')'
rule 101  abstract_declarator -> '(' parameter_list ')'
rule 102  abstract_declarator -> abstract_declarator '(' ')'
rule 103  abstract_declarator -> abstract_declarator '(' parameter_list ')'
rule 104  initializer -> assignment_expression
rule 105  initializer -> '{' initializer_list '}'
rule 106  initializer -> '{' initializer_list ',' '}'
rule 107  initializer_list -> initializer
rule 108  initializer_list -> designation initializer
rule 109  initializer_list -> initializer_list ',' initializer
rule 110  initializer_list -> initializer_list ',' designation initializer
rule 111  designation -> designator_list '='
rule 112  designator_list -> designator
rule 113  designator_list -> designator_list designator
rule 114  designator -> '[' logical_or_expression ']'
rule 115  designator -> '.' IDENTIFIER
rule 116  statement -> labeled_statement
rule 117  statement -> compound_statement
rule 118  statement -> expression_statement
rule 119  statement -> selection_statement
rule 120  statement -> iteration_statement
rule 121  statement -> jump_statement
rule 122  labeled_statement -> IDENTIFIER ':' statement
rule 123  labeled_statement -> CASE logical_or_expression ':' statement
rule 124  compound_statement -> '{' '}'
rule 125  compound_statement -> '{' block_item_list '}'
rule 126  block_item_list -> block_item
rule 127  block_item_list -> block_item_list block_item
rule 128  block_item -> declaration
rule 129  block_item -> statement
rule 130  expression_statement -> ';'
rule 131  expression_statement -> expression ';'
rule 132  selection_statement -> IF '(' expression ')' statement
rule 133  selection_statement -> IF '(' expression ')' statement ELSE statement
rule 134  selection_statement -> SWITCH '(' expression ')' statement
rule 135  iteration_statement -> WHILE '(' expression ')' statement
rule 136  iteration_statement -> DO statement WHILE '(' expression ')' ';'
rule 137  iteration_statement -> FOR '(' expression_statement expression_statement ')' statement
rule 138  iteration_statement -> FOR '(' expression_statement expression_statement expression ')' statement
rule 139  iteration_statement -> FOR '(' declaration expression_statement ')' statement
rule 140  iteration_statement -> FOR '(' declaration expression_statement expression ')' statement
rule 141  jump_statement -> GOTO IDENTIFIER ';'
rule 142  jump_statement -> CONTINUE ';'
rule 143  jump_statement -> BREAK ';'
rule 144  jump_statement -> RETURN ';'
rule 145  jump_statement -> RETURN expression ';'
rule 146  translation_unit -> external_declaration
rule 147  translation_unit -> translation_unit external_declaration
rule 148  external_declaration -> function_definition
rule 149  external_declaration -> declaration
rule 150  function_definition -> type_specifier declarator declaration_list compound_statement
rule 151  function_definition -> type_specifier declarator compound_statement
rule 152  declaration_list -> declaration
rule 153  declaration_list -> declaration_list declaration

Terminals, with rules where they appear

$ (-1)
'!' (33) 23
'%' (37) 27
'&' (38) 43
'(' (40) 7 10 11 79 83 84 85 93 100 101 102 103 132 133 134 135 136
    137 138 139 140
')' (41) 7 10 11 79 83 84 85 93 100 101 102 103 132 133 134 135 136
    137 138 139 140
'*' (42) 25 81 98 99
'+' (43) 20 29
',' (44) 15 66 70 87 92 106 109 110
'-' (45) 21 30
'.' (46) 115
'/' (47) 26
':' (58) 122 123
';' (59) 67 68 130 131 136 141 142 143 144 145
'<' (60) 35
'=' (61) 54 72 111
'>' (62) 36
'?' (63)
'[' (91) 9 80 81 82 94 95 96 97 98 99 114
']' (93) 9 80 81 82 94 95 96 97 98 99 114
'^' (94) 45
'{' (123) 105 106 124 125
'|' (124) 47
'}' (125) 105 106 124 125
'~' (126) 22
error (256)
IDENTIFIER (257) 2 78 91 92 115 122 141
CONSTANT (258)
STRING_LITERAL (259)
SIZEOF (260)
CONSTANT_INT (261) 5
CONSTANT_DOUBLE (262) 6
PTR_OP (263)
INC_OP (264) 12 17
DEC_OP (265) 13 18
LEFT_OP (266) 32
RIGHT_OP (267) 33
LE_OP (268) 37
GE_OP (269) 38
EQ_OP (270) 40
NE_OP (271) 41
AND_OP (272) 49
OR_OP (273) 51
MUL_ASSIGN (274) 55
DIV_ASSIGN (275) 56
MOD_ASSIGN (276) 57
ADD_ASSIGN (277) 58
SUB_ASSIGN (278) 59
LEFT_ASSIGN (279) 60
RIGHT_ASSIGN (280) 61
AND_ASSIGN (281) 62
XOR_ASSIGN (282) 63
OR_ASSIGN (283) 64
TYPE_NAME (284)
CHAR (285) 74
INT (286) 75
DOUBLE (287) 76
VOID (288) 73
BOOL (289) 77
CASE (290) 123
IF (291) 132 133
ELSE (292) 133
SWITCH (293) 134
WHILE (294) 135 136
DO (295) 136
FOR (296) 137 138 139 140
GOTO (297) 141
CONTINUE (298) 142
BREAK (299) 143
RETURN (300) 144 145
TRUE (301) 3
FALSE (302) 4
LOWER_THAN_ELSE (303)

Nonterminals, with rules where they appear

Program (74)
    on left: 1
primary_expression (75)
    on left: 2 3 4 5 6 7, on right: 8
postfix_expression (76)
    on left: 8 9 10 11 12 13, on right: 9 10 11 12 13 16
argument_expression_list (77)
    on left: 14 15, on right: 11 15
unary_expression (78)
    on left: 16 17 18 19, on right: 17 18 19 24 25 26 27 53
unary_operator (79)
    on left: 20 21 22 23, on right: 19
multiplicative_expression (80)
    on left: 24 25 26 27, on right: 25 26 27 28 29 30
additive_expression (81)
    on left: 28 29 30, on right: 29 30 31 32 33
shift_expression (82)
    on left: 31 32 33, on right: 32 33 34 35 36 37 38
relational_expression (83)
    on left: 34 35 36 37 38, on right: 35 36 37 38 39 40 41
equality_expression (84)
    on left: 39 40 41, on right: 40 41 42 43
and_expression (85)
    on left: 42 43, on right: 43 44 45
exclusive_or_expression (86)
    on left: 44 45, on right: 45 46 47
inclusive_or_expression (87)
    on left: 46 47, on right: 47 48 49
logical_and_expression (88)
    on left: 48 49, on right: 49 50 51
logical_or_expression (89)
    on left: 50 51, on right: 51 52 114 123
assignment_expression (90)
    on left: 52 53, on right: 14 15 53 65 66 80 95 97 104
assignment_operator (91)
    on left: 54 55 56 57 58 59 60 61 62 63 64, on right: 53
expression (92)
    on left: 65 66, on right: 7 9 66 131 132 133 134 135 136 138 140
    145
declaration (93)
    on left: 67 68, on right: 128 139 140 149 152 153
init_declarator_list (94)
    on left: 69 70, on right: 68 70
init_declarator (95)
    on left: 71 72, on right: 69 70
type_specifier (96)
    on left: 73 74 75 76 77, on right: 67 68 88 89 90 150 151
declarator (97)
    on left: 78 79 80 81 82 83 84 85, on right: 71 72 79 80 81 82 83
    84 85 88 150 151
parameter_list (98)
    on left: 86 87, on right: 83 87 101 103
parameter_declaration (99)
    on left: 88 89 90, on right: 86 87
identifier_list (100)
    on left: 91 92, on right: 84 92
abstract_declarator (101)
    on left: 93 94 95 96 97 98 99 100 101 102 103, on right: 89 93
    96 97 99 102 103
initializer (102)
    on left: 104 105 106, on right: 72 107 108 109 110
initializer_list (103)
    on left: 107 108 109 110, on right: 105 106 109 110
designation (104)
    on left: 111, on right: 108 110
designator_list (105)
    on left: 112 113, on right: 111 113
designator (106)
    on left: 114 115, on right: 112 113
statement (107)
    on left: 116 117 118 119 120 121, on right: 122 123 129 132 133
    134 135 136 137 138 139 140
labeled_statement (108)
    on left: 122 123, on right: 116
compound_statement (109)
    on left: 124 125, on right: 117 150 151
block_item_list (110)
    on left: 126 127, on right: 125 127
block_item (111)
    on left: 128 129, on right: 126 127
expression_statement (112)
    on left: 130 131, on right: 118 137 138 139 140
selection_statement (113)
    on left: 132 133 134, on right: 119
iteration_statement (114)
    on left: 135 136 137 138 139 140, on right: 120
jump_statement (115)
    on left: 141 142 143 144 145, on right: 121
translation_unit (116)
    on left: 146 147, on right: 1 147
external_declaration (117)
    on left: 148 149, on right: 146 147
function_definition (118)
    on left: 150 151, on right: 148
declaration_list (119)
    on left: 152 153, on right: 150 153


state 0

    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5

    Program	go to state 267
    declaration	go to state 6
    type_specifier	go to state 7
    translation_unit	go to state 8
    external_declaration	go to state 9
    function_definition	go to state 10



state 1

    type_specifier  ->  CHAR .   (rule 74)

    $default	reduce using rule 74 (type_specifier)



state 2

    type_specifier  ->  INT .   (rule 75)

    $default	reduce using rule 75 (type_specifier)



state 3

    type_specifier  ->  DOUBLE .   (rule 76)

    $default	reduce using rule 76 (type_specifier)



state 4

    type_specifier  ->  VOID .   (rule 73)

    $default	reduce using rule 73 (type_specifier)



state 5

    type_specifier  ->  BOOL .   (rule 77)

    $default	reduce using rule 77 (type_specifier)



state 6

    external_declaration  ->  declaration .   (rule 149)

    $default	reduce using rule 149 (external_declaration)



state 7

    declaration  ->  type_specifier . ';'   (rule 67)
    declaration  ->  type_specifier . init_declarator_list ';'   (rule 68)
    function_definition  ->  type_specifier . declarator declaration_list compound_statement   (rule 150)
    function_definition  ->  type_specifier . declarator compound_statement   (rule 151)

    IDENTIFIER	shift, and go to state 11
    ';' 	shift, and go to state 12
    '(' 	shift, and go to state 13

    init_declarator_list	go to state 14
    init_declarator	go to state 15
    declarator	go to state 16



state 8

    Program  ->  translation_unit .   (rule 1)
    translation_unit  ->  translation_unit . external_declaration   (rule 147)

    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5

    $default	reduce using rule 1 (Program)

    declaration	go to state 6
    type_specifier	go to state 7
    external_declaration	go to state 17
    function_definition	go to state 10



state 9

    translation_unit  ->  external_declaration .   (rule 146)

    $default	reduce using rule 146 (translation_unit)



state 10

    external_declaration  ->  function_definition .   (rule 148)

    $default	reduce using rule 148 (external_declaration)



state 11

    declarator  ->  IDENTIFIER .   (rule 78)

    $default	reduce using rule 78 (declarator)



state 12

    declaration  ->  type_specifier ';' .   (rule 67)

    $default	reduce using rule 67 (declaration)



state 13

    declarator  ->  '(' . declarator ')'   (rule 79)

    IDENTIFIER	shift, and go to state 11
    '(' 	shift, and go to state 13

    declarator	go to state 18



state 14

    declaration  ->  type_specifier init_declarator_list . ';'   (rule 68)
    init_declarator_list  ->  init_declarator_list . ',' init_declarator   (rule 70)

    ';' 	shift, and go to state 19
    ',' 	shift, and go to state 20



state 15

    init_declarator_list  ->  init_declarator .   (rule 69)

    $default	reduce using rule 69 (init_declarator_list)



state 16

    init_declarator  ->  declarator .   (rule 71)
    init_declarator  ->  declarator . '=' initializer   (rule 72)
    declarator  ->  declarator . '[' assignment_expression ']'   (rule 80)
    declarator  ->  declarator . '[' '*' ']'   (rule 81)
    declarator  ->  declarator . '[' ']'   (rule 82)
    declarator  ->  declarator . '(' parameter_list ')'   (rule 83)
    declarator  ->  declarator . '(' identifier_list ')'   (rule 84)
    declarator  ->  declarator . '(' ')'   (rule 85)
    function_definition  ->  type_specifier declarator . declaration_list compound_statement   (rule 150)
    function_definition  ->  type_specifier declarator . compound_statement   (rule 151)

    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    '=' 	shift, and go to state 21
    '[' 	shift, and go to state 22
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    $default	reduce using rule 71 (init_declarator)

    declaration	go to state 25
    type_specifier	go to state 26
    compound_statement	go to state 27
    declaration_list	go to state 28



state 17

    translation_unit  ->  translation_unit external_declaration .   (rule 147)

    $default	reduce using rule 147 (translation_unit)



state 18

    declarator  ->  '(' declarator . ')'   (rule 79)
    declarator  ->  declarator . '[' assignment_expression ']'   (rule 80)
    declarator  ->  declarator . '[' '*' ']'   (rule 81)
    declarator  ->  declarator . '[' ']'   (rule 82)
    declarator  ->  declarator . '(' parameter_list ')'   (rule 83)
    declarator  ->  declarator . '(' identifier_list ')'   (rule 84)
    declarator  ->  declarator . '(' ')'   (rule 85)

    '[' 	shift, and go to state 22
    '(' 	shift, and go to state 24
    ')' 	shift, and go to state 29



state 19

    declaration  ->  type_specifier init_declarator_list ';' .   (rule 68)

    $default	reduce using rule 68 (declaration)



state 20

    init_declarator_list  ->  init_declarator_list ',' . init_declarator   (rule 70)

    IDENTIFIER	shift, and go to state 11
    '(' 	shift, and go to state 13

    init_declarator	go to state 30
    declarator	go to state 31



state 21

    init_declarator  ->  declarator '=' . initializer   (rule 72)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 43
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 59
    initializer	go to state 60



state 22

    declarator  ->  declarator '[' . assignment_expression ']'   (rule 80)
    declarator  ->  declarator '[' . '*' ']'   (rule 81)
    declarator  ->  declarator '[' . ']'   (rule 82)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ']' 	shift, and go to state 61
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '*' 	shift, and go to state 62
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 63



state 23

    compound_statement  ->  '{' . '}'   (rule 124)
    compound_statement  ->  '{' . block_item_list '}'   (rule 125)

    IDENTIFIER	shift, and go to state 64
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    CASE	shift, and go to state 65
    IF  	shift, and go to state 66
    SWITCH	shift, and go to state 67
    WHILE	shift, and go to state 68
    DO  	shift, and go to state 69
    FOR 	shift, and go to state 70
    GOTO	shift, and go to state 71
    CONTINUE	shift, and go to state 72
    BREAK	shift, and go to state 73
    RETURN	shift, and go to state 74
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ';' 	shift, and go to state 75
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 23
    '}' 	shift, and go to state 76
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 78
    declaration	go to state 79
    type_specifier	go to state 26
    statement	go to state 80
    labeled_statement	go to state 81
    compound_statement	go to state 82
    block_item_list	go to state 83
    block_item	go to state 84
    expression_statement	go to state 85
    selection_statement	go to state 86
    iteration_statement	go to state 87
    jump_statement	go to state 88



state 24

    declarator  ->  declarator '(' . parameter_list ')'   (rule 83)
    declarator  ->  declarator '(' . identifier_list ')'   (rule 84)
    declarator  ->  declarator '(' . ')'   (rule 85)

    IDENTIFIER	shift, and go to state 89
    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    ')' 	shift, and go to state 90

    type_specifier	go to state 91
    parameter_list	go to state 92
    parameter_declaration	go to state 93
    identifier_list	go to state 94



state 25

    declaration_list  ->  declaration .   (rule 152)

    $default	reduce using rule 152 (declaration_list)



state 26

    declaration  ->  type_specifier . ';'   (rule 67)
    declaration  ->  type_specifier . init_declarator_list ';'   (rule 68)

    IDENTIFIER	shift, and go to state 11
    ';' 	shift, and go to state 12
    '(' 	shift, and go to state 13

    init_declarator_list	go to state 14
    init_declarator	go to state 15
    declarator	go to state 31



state 27

    function_definition  ->  type_specifier declarator compound_statement .   (rule 151)

    $default	reduce using rule 151 (function_definition)



state 28

    function_definition  ->  type_specifier declarator declaration_list . compound_statement   (rule 150)
    declaration_list  ->  declaration_list . declaration   (rule 153)

    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    '{' 	shift, and go to state 23

    declaration	go to state 95
    type_specifier	go to state 26
    compound_statement	go to state 96



state 29

    declarator  ->  '(' declarator ')' .   (rule 79)

    $default	reduce using rule 79 (declarator)



state 30

    init_declarator_list  ->  init_declarator_list ',' init_declarator .   (rule 70)

    $default	reduce using rule 70 (init_declarator_list)



state 31

    init_declarator  ->  declarator .   (rule 71)
    init_declarator  ->  declarator . '=' initializer   (rule 72)
    declarator  ->  declarator . '[' assignment_expression ']'   (rule 80)
    declarator  ->  declarator . '[' '*' ']'   (rule 81)
    declarator  ->  declarator . '[' ']'   (rule 82)
    declarator  ->  declarator . '(' parameter_list ')'   (rule 83)
    declarator  ->  declarator . '(' identifier_list ')'   (rule 84)
    declarator  ->  declarator . '(' ')'   (rule 85)

    '=' 	shift, and go to state 21
    '[' 	shift, and go to state 22
    '(' 	shift, and go to state 24

    $default	reduce using rule 71 (init_declarator)



state 32

    primary_expression  ->  IDENTIFIER .   (rule 2)

    $default	reduce using rule 2 (primary_expression)



state 33

    primary_expression  ->  CONSTANT_INT .   (rule 5)

    $default	reduce using rule 5 (primary_expression)



state 34

    primary_expression  ->  CONSTANT_DOUBLE .   (rule 6)

    $default	reduce using rule 6 (primary_expression)



state 35

    unary_expression  ->  INC_OP . unary_expression   (rule 17)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 97
    unary_operator	go to state 48



state 36

    unary_expression  ->  DEC_OP . unary_expression   (rule 18)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 98
    unary_operator	go to state 48



state 37

    primary_expression  ->  TRUE .   (rule 3)

    $default	reduce using rule 3 (primary_expression)



state 38

    primary_expression  ->  FALSE .   (rule 4)

    $default	reduce using rule 4 (primary_expression)



state 39

    unary_operator  ->  '!' .   (rule 23)

    $default	reduce using rule 23 (unary_operator)



state 40

    unary_operator  ->  '~' .   (rule 22)

    $default	reduce using rule 22 (unary_operator)



state 41

    unary_operator  ->  '-' .   (rule 21)

    $default	reduce using rule 21 (unary_operator)



state 42

    unary_operator  ->  '+' .   (rule 20)

    $default	reduce using rule 20 (unary_operator)



state 43

    initializer  ->  '{' . initializer_list '}'   (rule 105)
    initializer  ->  '{' . initializer_list ',' '}'   (rule 106)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '[' 	shift, and go to state 99
    '.' 	shift, and go to state 100
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 43
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 59
    initializer	go to state 101
    initializer_list	go to state 102
    designation	go to state 103
    designator_list	go to state 104
    designator	go to state 105



state 44

    primary_expression  ->  '(' . expression ')'   (rule 7)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 106



state 45

    postfix_expression  ->  primary_expression .   (rule 8)

    $default	reduce using rule 8 (postfix_expression)



state 46

    postfix_expression  ->  postfix_expression . '[' expression ']'   (rule 9)
    postfix_expression  ->  postfix_expression . '(' ')'   (rule 10)
    postfix_expression  ->  postfix_expression . '(' argument_expression_list ')'   (rule 11)
    postfix_expression  ->  postfix_expression . INC_OP   (rule 12)
    postfix_expression  ->  postfix_expression . DEC_OP   (rule 13)
    unary_expression  ->  postfix_expression .   (rule 16)

    INC_OP	shift, and go to state 107
    DEC_OP	shift, and go to state 108
    '[' 	shift, and go to state 109
    '(' 	shift, and go to state 110

    $default	reduce using rule 16 (unary_expression)



state 47

    multiplicative_expression  ->  unary_expression .   (rule 24)
    assignment_expression  ->  unary_expression . assignment_operator assignment_expression   (rule 53)

    MUL_ASSIGN	shift, and go to state 111
    DIV_ASSIGN	shift, and go to state 112
    MOD_ASSIGN	shift, and go to state 113
    ADD_ASSIGN	shift, and go to state 114
    SUB_ASSIGN	shift, and go to state 115
    LEFT_ASSIGN	shift, and go to state 116
    RIGHT_ASSIGN	shift, and go to state 117
    AND_ASSIGN	shift, and go to state 118
    XOR_ASSIGN	shift, and go to state 119
    OR_ASSIGN	shift, and go to state 120
    '=' 	shift, and go to state 121

    $default	reduce using rule 24 (multiplicative_expression)

    assignment_operator	go to state 122



state 48

    unary_expression  ->  unary_operator . unary_expression   (rule 19)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 123
    unary_operator	go to state 48



state 49

    multiplicative_expression  ->  multiplicative_expression . '*' unary_expression   (rule 25)
    multiplicative_expression  ->  multiplicative_expression . '/' unary_expression   (rule 26)
    multiplicative_expression  ->  multiplicative_expression . '%' unary_expression   (rule 27)
    additive_expression  ->  multiplicative_expression .   (rule 28)

    '*' 	shift, and go to state 124
    '/' 	shift, and go to state 125
    '%' 	shift, and go to state 126

    $default	reduce using rule 28 (additive_expression)



state 50

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 29)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 30)
    shift_expression  ->  additive_expression .   (rule 31)

    '-' 	shift, and go to state 127
    '+' 	shift, and go to state 128

    $default	reduce using rule 31 (shift_expression)



state 51

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 32)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 33)
    relational_expression  ->  shift_expression .   (rule 34)

    LEFT_OP	shift, and go to state 129
    RIGHT_OP	shift, and go to state 130

    $default	reduce using rule 34 (relational_expression)



state 52

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 35)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 36)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 37)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 38)
    equality_expression  ->  relational_expression .   (rule 39)

    LE_OP	shift, and go to state 131
    GE_OP	shift, and go to state 132
    '<' 	shift, and go to state 133
    '>' 	shift, and go to state 134

    $default	reduce using rule 39 (equality_expression)



state 53

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 40)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 41)
    and_expression  ->  equality_expression .   (rule 42)

    EQ_OP	shift, and go to state 135
    NE_OP	shift, and go to state 136

    $default	reduce using rule 42 (and_expression)



state 54

    and_expression  ->  and_expression . '&' equality_expression   (rule 43)
    exclusive_or_expression  ->  and_expression .   (rule 44)

    '&' 	shift, and go to state 137

    $default	reduce using rule 44 (exclusive_or_expression)



state 55

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 45)
    inclusive_or_expression  ->  exclusive_or_expression .   (rule 46)

    '^' 	shift, and go to state 138

    $default	reduce using rule 46 (inclusive_or_expression)



state 56

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 47)
    logical_and_expression  ->  inclusive_or_expression .   (rule 48)

    '|' 	shift, and go to state 139

    $default	reduce using rule 48 (logical_and_expression)



state 57

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 49)
    logical_or_expression  ->  logical_and_expression .   (rule 50)

    AND_OP	shift, and go to state 140

    $default	reduce using rule 50 (logical_or_expression)



state 58

    logical_or_expression  ->  logical_or_expression . OR_OP logical_and_expression   (rule 51)
    assignment_expression  ->  logical_or_expression .   (rule 52)

    OR_OP	shift, and go to state 141

    $default	reduce using rule 52 (assignment_expression)



state 59

    initializer  ->  assignment_expression .   (rule 104)

    $default	reduce using rule 104 (initializer)



state 60

    init_declarator  ->  declarator '=' initializer .   (rule 72)

    $default	reduce using rule 72 (init_declarator)



state 61

    declarator  ->  declarator '[' ']' .   (rule 82)

    $default	reduce using rule 82 (declarator)



state 62

    declarator  ->  declarator '[' '*' . ']'   (rule 81)

    ']' 	shift, and go to state 142



state 63

    declarator  ->  declarator '[' assignment_expression . ']'   (rule 80)

    ']' 	shift, and go to state 143



state 64

    primary_expression  ->  IDENTIFIER .   (rule 2)
    labeled_statement  ->  IDENTIFIER . ':' statement   (rule 122)

    ':' 	shift, and go to state 144

    $default	reduce using rule 2 (primary_expression)



state 65

    labeled_statement  ->  CASE . logical_or_expression ':' statement   (rule 123)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 145
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 146



state 66

    selection_statement  ->  IF . '(' expression ')' statement   (rule 132)
    selection_statement  ->  IF . '(' expression ')' statement ELSE statement   (rule 133)

    '(' 	shift, and go to state 147



state 67

    selection_statement  ->  SWITCH . '(' expression ')' statement   (rule 134)

    '(' 	shift, and go to state 148



state 68

    iteration_statement  ->  WHILE . '(' expression ')' statement   (rule 135)

    '(' 	shift, and go to state 149



state 69

    iteration_statement  ->  DO . statement WHILE '(' expression ')' ';'   (rule 136)

    IDENTIFIER	shift, and go to state 64
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    CASE	shift, and go to state 65
    IF  	shift, and go to state 66
    SWITCH	shift, and go to state 67
    WHILE	shift, and go to state 68
    DO  	shift, and go to state 69
    FOR 	shift, and go to state 70
    GOTO	shift, and go to state 71
    CONTINUE	shift, and go to state 72
    BREAK	shift, and go to state 73
    RETURN	shift, and go to state 74
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ';' 	shift, and go to state 75
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 78
    statement	go to state 150
    labeled_statement	go to state 81
    compound_statement	go to state 82
    expression_statement	go to state 85
    selection_statement	go to state 86
    iteration_statement	go to state 87
    jump_statement	go to state 88



state 70

    iteration_statement  ->  FOR . '(' expression_statement expression_statement ')' statement   (rule 137)
    iteration_statement  ->  FOR . '(' expression_statement expression_statement expression ')' statement   (rule 138)
    iteration_statement  ->  FOR . '(' declaration expression_statement ')' statement   (rule 139)
    iteration_statement  ->  FOR . '(' declaration expression_statement expression ')' statement   (rule 140)

    '(' 	shift, and go to state 151



state 71

    jump_statement  ->  GOTO . IDENTIFIER ';'   (rule 141)

    IDENTIFIER	shift, and go to state 152



state 72

    jump_statement  ->  CONTINUE . ';'   (rule 142)

    ';' 	shift, and go to state 153



state 73

    jump_statement  ->  BREAK . ';'   (rule 143)

    ';' 	shift, and go to state 154



state 74

    jump_statement  ->  RETURN . ';'   (rule 144)
    jump_statement  ->  RETURN . expression ';'   (rule 145)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ';' 	shift, and go to state 155
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 156



state 75

    expression_statement  ->  ';' .   (rule 130)

    $default	reduce using rule 130 (expression_statement)



state 76

    compound_statement  ->  '{' '}' .   (rule 124)

    $default	reduce using rule 124 (compound_statement)



state 77

    expression  ->  assignment_expression .   (rule 65)

    $default	reduce using rule 65 (expression)



state 78

    expression  ->  expression . ',' assignment_expression   (rule 66)
    expression_statement  ->  expression . ';'   (rule 131)

    ';' 	shift, and go to state 157
    ',' 	shift, and go to state 158



state 79

    block_item  ->  declaration .   (rule 128)

    $default	reduce using rule 128 (block_item)



state 80

    block_item  ->  statement .   (rule 129)

    $default	reduce using rule 129 (block_item)



state 81

    statement  ->  labeled_statement .   (rule 116)

    $default	reduce using rule 116 (statement)



state 82

    statement  ->  compound_statement .   (rule 117)

    $default	reduce using rule 117 (statement)



state 83

    compound_statement  ->  '{' block_item_list . '}'   (rule 125)
    block_item_list  ->  block_item_list . block_item   (rule 127)

    IDENTIFIER	shift, and go to state 64
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    CASE	shift, and go to state 65
    IF  	shift, and go to state 66
    SWITCH	shift, and go to state 67
    WHILE	shift, and go to state 68
    DO  	shift, and go to state 69
    FOR 	shift, and go to state 70
    GOTO	shift, and go to state 71
    CONTINUE	shift, and go to state 72
    BREAK	shift, and go to state 73
    RETURN	shift, and go to state 74
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ';' 	shift, and go to state 75
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 23
    '}' 	shift, and go to state 159
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 78
    declaration	go to state 79
    type_specifier	go to state 26
    statement	go to state 80
    labeled_statement	go to state 81
    compound_statement	go to state 82
    block_item	go to state 160
    expression_statement	go to state 85
    selection_statement	go to state 86
    iteration_statement	go to state 87
    jump_statement	go to state 88



state 84

    block_item_list  ->  block_item .   (rule 126)

    $default	reduce using rule 126 (block_item_list)



state 85

    statement  ->  expression_statement .   (rule 118)

    $default	reduce using rule 118 (statement)



state 86

    statement  ->  selection_statement .   (rule 119)

    $default	reduce using rule 119 (statement)



state 87

    statement  ->  iteration_statement .   (rule 120)

    $default	reduce using rule 120 (statement)



state 88

    statement  ->  jump_statement .   (rule 121)

    $default	reduce using rule 121 (statement)



state 89

    identifier_list  ->  IDENTIFIER .   (rule 91)

    $default	reduce using rule 91 (identifier_list)



state 90

    declarator  ->  declarator '(' ')' .   (rule 85)

    $default	reduce using rule 85 (declarator)



state 91

    parameter_declaration  ->  type_specifier . declarator   (rule 88)
    parameter_declaration  ->  type_specifier . abstract_declarator   (rule 89)
    parameter_declaration  ->  type_specifier .   (rule 90)

    IDENTIFIER	shift, and go to state 11
    '[' 	shift, and go to state 161
    '(' 	shift, and go to state 162

    $default	reduce using rule 90 (parameter_declaration)

    declarator	go to state 163
    abstract_declarator	go to state 164



state 92

    declarator  ->  declarator '(' parameter_list . ')'   (rule 83)
    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 87)

    ',' 	shift, and go to state 165
    ')' 	shift, and go to state 166



state 93

    parameter_list  ->  parameter_declaration .   (rule 86)

    $default	reduce using rule 86 (parameter_list)



state 94

    declarator  ->  declarator '(' identifier_list . ')'   (rule 84)
    identifier_list  ->  identifier_list . ',' IDENTIFIER   (rule 92)

    ',' 	shift, and go to state 167
    ')' 	shift, and go to state 168



state 95

    declaration_list  ->  declaration_list declaration .   (rule 153)

    $default	reduce using rule 153 (declaration_list)



state 96

    function_definition  ->  type_specifier declarator declaration_list compound_statement .   (rule 150)

    $default	reduce using rule 150 (function_definition)



state 97

    unary_expression  ->  INC_OP unary_expression .   (rule 17)

    $default	reduce using rule 17 (unary_expression)



state 98

    unary_expression  ->  DEC_OP unary_expression .   (rule 18)

    $default	reduce using rule 18 (unary_expression)



state 99

    designator  ->  '[' . logical_or_expression ']'   (rule 114)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 145
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 169



state 100

    designator  ->  '.' . IDENTIFIER   (rule 115)

    IDENTIFIER	shift, and go to state 170



state 101

    initializer_list  ->  initializer .   (rule 107)

    $default	reduce using rule 107 (initializer_list)



state 102

    initializer  ->  '{' initializer_list . '}'   (rule 105)
    initializer  ->  '{' initializer_list . ',' '}'   (rule 106)
    initializer_list  ->  initializer_list . ',' initializer   (rule 109)
    initializer_list  ->  initializer_list . ',' designation initializer   (rule 110)

    ',' 	shift, and go to state 171
    '}' 	shift, and go to state 172



state 103

    initializer_list  ->  designation . initializer   (rule 108)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 43
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 59
    initializer	go to state 173



state 104

    designation  ->  designator_list . '='   (rule 111)
    designator_list  ->  designator_list . designator   (rule 113)

    '=' 	shift, and go to state 174
    '[' 	shift, and go to state 99
    '.' 	shift, and go to state 100

    designator	go to state 175



state 105

    designator_list  ->  designator .   (rule 112)

    $default	reduce using rule 112 (designator_list)



state 106

    primary_expression  ->  '(' expression . ')'   (rule 7)
    expression  ->  expression . ',' assignment_expression   (rule 66)

    ',' 	shift, and go to state 158
    ')' 	shift, and go to state 176



state 107

    postfix_expression  ->  postfix_expression INC_OP .   (rule 12)

    $default	reduce using rule 12 (postfix_expression)



state 108

    postfix_expression  ->  postfix_expression DEC_OP .   (rule 13)

    $default	reduce using rule 13 (postfix_expression)



state 109

    postfix_expression  ->  postfix_expression '[' . expression ']'   (rule 9)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 177



state 110

    postfix_expression  ->  postfix_expression '(' . ')'   (rule 10)
    postfix_expression  ->  postfix_expression '(' . argument_expression_list ')'   (rule 11)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44
    ')' 	shift, and go to state 178

    primary_expression	go to state 45
    postfix_expression	go to state 46
    argument_expression_list	go to state 179
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 180



state 111

    assignment_operator  ->  MUL_ASSIGN .   (rule 55)

    $default	reduce using rule 55 (assignment_operator)



state 112

    assignment_operator  ->  DIV_ASSIGN .   (rule 56)

    $default	reduce using rule 56 (assignment_operator)



state 113

    assignment_operator  ->  MOD_ASSIGN .   (rule 57)

    $default	reduce using rule 57 (assignment_operator)



state 114

    assignment_operator  ->  ADD_ASSIGN .   (rule 58)

    $default	reduce using rule 58 (assignment_operator)



state 115

    assignment_operator  ->  SUB_ASSIGN .   (rule 59)

    $default	reduce using rule 59 (assignment_operator)



state 116

    assignment_operator  ->  LEFT_ASSIGN .   (rule 60)

    $default	reduce using rule 60 (assignment_operator)



state 117

    assignment_operator  ->  RIGHT_ASSIGN .   (rule 61)

    $default	reduce using rule 61 (assignment_operator)



state 118

    assignment_operator  ->  AND_ASSIGN .   (rule 62)

    $default	reduce using rule 62 (assignment_operator)



state 119

    assignment_operator  ->  XOR_ASSIGN .   (rule 63)

    $default	reduce using rule 63 (assignment_operator)



state 120

    assignment_operator  ->  OR_ASSIGN .   (rule 64)

    $default	reduce using rule 64 (assignment_operator)



state 121

    assignment_operator  ->  '=' .   (rule 54)

    $default	reduce using rule 54 (assignment_operator)



state 122

    assignment_expression  ->  unary_expression assignment_operator . assignment_expression   (rule 53)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 181



state 123

    unary_expression  ->  unary_operator unary_expression .   (rule 19)

    $default	reduce using rule 19 (unary_expression)



state 124

    multiplicative_expression  ->  multiplicative_expression '*' . unary_expression   (rule 25)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 182
    unary_operator	go to state 48



state 125

    multiplicative_expression  ->  multiplicative_expression '/' . unary_expression   (rule 26)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 183
    unary_operator	go to state 48



state 126

    multiplicative_expression  ->  multiplicative_expression '%' . unary_expression   (rule 27)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 184
    unary_operator	go to state 48



state 127

    additive_expression  ->  additive_expression '-' . multiplicative_expression   (rule 30)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 145
    unary_operator	go to state 48
    multiplicative_expression	go to state 185



state 128

    additive_expression  ->  additive_expression '+' . multiplicative_expression   (rule 29)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 145
    unary_operator	go to state 48
    multiplicative_expression	go to state 186



state 129

    shift_expression  ->  shift_expression LEFT_OP . additive_expression   (rule 32)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 145
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 187



state 130

    shift_expression  ->  shift_expression RIGHT_OP . additive_expression   (rule 33)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 145
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 188



state 131

    relational_expression  ->  relational_expression LE_OP . shift_expression   (rule 37)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 145
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 189



state 132

    relational_expression  ->  relational_expression GE_OP . shift_expression   (rule 38)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 145
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 190



state 133

    relational_expression  ->  relational_expression '<' . shift_expression   (rule 35)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 145
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 191



state 134

    relational_expression  ->  relational_expression '>' . shift_expression   (rule 36)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 145
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 192



state 135

    equality_expression  ->  equality_expression EQ_OP . relational_expression   (rule 40)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 145
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 193



state 136

    equality_expression  ->  equality_expression NE_OP . relational_expression   (rule 41)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 145
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 194



state 137

    and_expression  ->  and_expression '&' . equality_expression   (rule 43)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 145
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 195



state 138

    exclusive_or_expression  ->  exclusive_or_expression '^' . and_expression   (rule 45)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 145
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 196



state 139

    inclusive_or_expression  ->  inclusive_or_expression '|' . exclusive_or_expression   (rule 47)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 145
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 197



state 140

    logical_and_expression  ->  logical_and_expression AND_OP . inclusive_or_expression   (rule 49)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 145
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 198



state 141

    logical_or_expression  ->  logical_or_expression OR_OP . logical_and_expression   (rule 51)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 145
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 199



state 142

    declarator  ->  declarator '[' '*' ']' .   (rule 81)

    $default	reduce using rule 81 (declarator)



state 143

    declarator  ->  declarator '[' assignment_expression ']' .   (rule 80)

    $default	reduce using rule 80 (declarator)



state 144

    labeled_statement  ->  IDENTIFIER ':' . statement   (rule 122)

    IDENTIFIER	shift, and go to state 64
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    CASE	shift, and go to state 65
    IF  	shift, and go to state 66
    SWITCH	shift, and go to state 67
    WHILE	shift, and go to state 68
    DO  	shift, and go to state 69
    FOR 	shift, and go to state 70
    GOTO	shift, and go to state 71
    CONTINUE	shift, and go to state 72
    BREAK	shift, and go to state 73
    RETURN	shift, and go to state 74
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ';' 	shift, and go to state 75
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 78
    statement	go to state 200
    labeled_statement	go to state 81
    compound_statement	go to state 82
    expression_statement	go to state 85
    selection_statement	go to state 86
    iteration_statement	go to state 87
    jump_statement	go to state 88



state 145

    multiplicative_expression  ->  unary_expression .   (rule 24)

    $default	reduce using rule 24 (multiplicative_expression)



state 146

    logical_or_expression  ->  logical_or_expression . OR_OP logical_and_expression   (rule 51)
    labeled_statement  ->  CASE logical_or_expression . ':' statement   (rule 123)

    OR_OP	shift, and go to state 141
    ':' 	shift, and go to state 201



state 147

    selection_statement  ->  IF '(' . expression ')' statement   (rule 132)
    selection_statement  ->  IF '(' . expression ')' statement ELSE statement   (rule 133)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 202



state 148

    selection_statement  ->  SWITCH '(' . expression ')' statement   (rule 134)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 203



state 149

    iteration_statement  ->  WHILE '(' . expression ')' statement   (rule 135)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 204



state 150

    iteration_statement  ->  DO statement . WHILE '(' expression ')' ';'   (rule 136)

    WHILE	shift, and go to state 205



state 151

    iteration_statement  ->  FOR '(' . expression_statement expression_statement ')' statement   (rule 137)
    iteration_statement  ->  FOR '(' . expression_statement expression_statement expression ')' statement   (rule 138)
    iteration_statement  ->  FOR '(' . declaration expression_statement ')' statement   (rule 139)
    iteration_statement  ->  FOR '(' . declaration expression_statement expression ')' statement   (rule 140)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ';' 	shift, and go to state 75
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 78
    declaration	go to state 206
    type_specifier	go to state 26
    expression_statement	go to state 207



state 152

    jump_statement  ->  GOTO IDENTIFIER . ';'   (rule 141)

    ';' 	shift, and go to state 208



state 153

    jump_statement  ->  CONTINUE ';' .   (rule 142)

    $default	reduce using rule 142 (jump_statement)



state 154

    jump_statement  ->  BREAK ';' .   (rule 143)

    $default	reduce using rule 143 (jump_statement)



state 155

    jump_statement  ->  RETURN ';' .   (rule 144)

    $default	reduce using rule 144 (jump_statement)



state 156

    expression  ->  expression . ',' assignment_expression   (rule 66)
    jump_statement  ->  RETURN expression . ';'   (rule 145)

    ';' 	shift, and go to state 209
    ',' 	shift, and go to state 158



state 157

    expression_statement  ->  expression ';' .   (rule 131)

    $default	reduce using rule 131 (expression_statement)



state 158

    expression  ->  expression ',' . assignment_expression   (rule 66)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 210



state 159

    compound_statement  ->  '{' block_item_list '}' .   (rule 125)

    $default	reduce using rule 125 (compound_statement)



state 160

    block_item_list  ->  block_item_list block_item .   (rule 127)

    $default	reduce using rule 127 (block_item_list)



state 161

    abstract_declarator  ->  '[' . ']'   (rule 94)
    abstract_declarator  ->  '[' . assignment_expression ']'   (rule 95)
    abstract_declarator  ->  '[' . '*' ']'   (rule 98)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ']' 	shift, and go to state 211
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '*' 	shift, and go to state 212
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 213



state 162

    declarator  ->  '(' . declarator ')'   (rule 79)
    abstract_declarator  ->  '(' . abstract_declarator ')'   (rule 93)
    abstract_declarator  ->  '(' . ')'   (rule 100)
    abstract_declarator  ->  '(' . parameter_list ')'   (rule 101)

    IDENTIFIER	shift, and go to state 11
    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    '[' 	shift, and go to state 161
    '(' 	shift, and go to state 162
    ')' 	shift, and go to state 214

    type_specifier	go to state 91
    declarator	go to state 18
    parameter_list	go to state 215
    parameter_declaration	go to state 93
    abstract_declarator	go to state 216



state 163

    declarator  ->  declarator . '[' assignment_expression ']'   (rule 80)
    declarator  ->  declarator . '[' '*' ']'   (rule 81)
    declarator  ->  declarator . '[' ']'   (rule 82)
    declarator  ->  declarator . '(' parameter_list ')'   (rule 83)
    declarator  ->  declarator . '(' identifier_list ')'   (rule 84)
    declarator  ->  declarator . '(' ')'   (rule 85)
    parameter_declaration  ->  type_specifier declarator .   (rule 88)

    '[' 	shift, and go to state 22
    '(' 	shift, and go to state 24

    $default	reduce using rule 88 (parameter_declaration)



state 164

    parameter_declaration  ->  type_specifier abstract_declarator .   (rule 89)
    abstract_declarator  ->  abstract_declarator . '[' ']'   (rule 96)
    abstract_declarator  ->  abstract_declarator . '[' assignment_expression ']'   (rule 97)
    abstract_declarator  ->  abstract_declarator . '[' '*' ']'   (rule 99)
    abstract_declarator  ->  abstract_declarator . '(' ')'   (rule 102)
    abstract_declarator  ->  abstract_declarator . '(' parameter_list ')'   (rule 103)

    '[' 	shift, and go to state 217
    '(' 	shift, and go to state 218

    $default	reduce using rule 89 (parameter_declaration)



state 165

    parameter_list  ->  parameter_list ',' . parameter_declaration   (rule 87)

    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5

    type_specifier	go to state 91
    parameter_declaration	go to state 219



state 166

    declarator  ->  declarator '(' parameter_list ')' .   (rule 83)

    $default	reduce using rule 83 (declarator)



state 167

    identifier_list  ->  identifier_list ',' . IDENTIFIER   (rule 92)

    IDENTIFIER	shift, and go to state 220



state 168

    declarator  ->  declarator '(' identifier_list ')' .   (rule 84)

    $default	reduce using rule 84 (declarator)



state 169

    logical_or_expression  ->  logical_or_expression . OR_OP logical_and_expression   (rule 51)
    designator  ->  '[' logical_or_expression . ']'   (rule 114)

    OR_OP	shift, and go to state 141
    ']' 	shift, and go to state 221



state 170

    designator  ->  '.' IDENTIFIER .   (rule 115)

    $default	reduce using rule 115 (designator)



state 171

    initializer  ->  '{' initializer_list ',' . '}'   (rule 106)
    initializer_list  ->  initializer_list ',' . initializer   (rule 109)
    initializer_list  ->  initializer_list ',' . designation initializer   (rule 110)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '[' 	shift, and go to state 99
    '.' 	shift, and go to state 100
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 43
    '}' 	shift, and go to state 222
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 59
    initializer	go to state 223
    designation	go to state 224
    designator_list	go to state 104
    designator	go to state 105



state 172

    initializer  ->  '{' initializer_list '}' .   (rule 105)

    $default	reduce using rule 105 (initializer)



state 173

    initializer_list  ->  designation initializer .   (rule 108)

    $default	reduce using rule 108 (initializer_list)



state 174

    designation  ->  designator_list '=' .   (rule 111)

    $default	reduce using rule 111 (designation)



state 175

    designator_list  ->  designator_list designator .   (rule 113)

    $default	reduce using rule 113 (designator_list)



state 176

    primary_expression  ->  '(' expression ')' .   (rule 7)

    $default	reduce using rule 7 (primary_expression)



state 177

    postfix_expression  ->  postfix_expression '[' expression . ']'   (rule 9)
    expression  ->  expression . ',' assignment_expression   (rule 66)

    ',' 	shift, and go to state 158
    ']' 	shift, and go to state 225



state 178

    postfix_expression  ->  postfix_expression '(' ')' .   (rule 10)

    $default	reduce using rule 10 (postfix_expression)



state 179

    postfix_expression  ->  postfix_expression '(' argument_expression_list . ')'   (rule 11)
    argument_expression_list  ->  argument_expression_list . ',' assignment_expression   (rule 15)

    ',' 	shift, and go to state 226
    ')' 	shift, and go to state 227



state 180

    argument_expression_list  ->  assignment_expression .   (rule 14)

    $default	reduce using rule 14 (argument_expression_list)



state 181

    assignment_expression  ->  unary_expression assignment_operator assignment_expression .   (rule 53)

    $default	reduce using rule 53 (assignment_expression)



state 182

    multiplicative_expression  ->  multiplicative_expression '*' unary_expression .   (rule 25)

    $default	reduce using rule 25 (multiplicative_expression)



state 183

    multiplicative_expression  ->  multiplicative_expression '/' unary_expression .   (rule 26)

    $default	reduce using rule 26 (multiplicative_expression)



state 184

    multiplicative_expression  ->  multiplicative_expression '%' unary_expression .   (rule 27)

    $default	reduce using rule 27 (multiplicative_expression)



state 185

    multiplicative_expression  ->  multiplicative_expression . '*' unary_expression   (rule 25)
    multiplicative_expression  ->  multiplicative_expression . '/' unary_expression   (rule 26)
    multiplicative_expression  ->  multiplicative_expression . '%' unary_expression   (rule 27)
    additive_expression  ->  additive_expression '-' multiplicative_expression .   (rule 30)

    '*' 	shift, and go to state 124
    '/' 	shift, and go to state 125
    '%' 	shift, and go to state 126

    $default	reduce using rule 30 (additive_expression)



state 186

    multiplicative_expression  ->  multiplicative_expression . '*' unary_expression   (rule 25)
    multiplicative_expression  ->  multiplicative_expression . '/' unary_expression   (rule 26)
    multiplicative_expression  ->  multiplicative_expression . '%' unary_expression   (rule 27)
    additive_expression  ->  additive_expression '+' multiplicative_expression .   (rule 29)

    '*' 	shift, and go to state 124
    '/' 	shift, and go to state 125
    '%' 	shift, and go to state 126

    $default	reduce using rule 29 (additive_expression)



state 187

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 29)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 30)
    shift_expression  ->  shift_expression LEFT_OP additive_expression .   (rule 32)

    '-' 	shift, and go to state 127
    '+' 	shift, and go to state 128

    $default	reduce using rule 32 (shift_expression)



state 188

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 29)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 30)
    shift_expression  ->  shift_expression RIGHT_OP additive_expression .   (rule 33)

    '-' 	shift, and go to state 127
    '+' 	shift, and go to state 128

    $default	reduce using rule 33 (shift_expression)



state 189

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 32)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 33)
    relational_expression  ->  relational_expression LE_OP shift_expression .   (rule 37)

    LEFT_OP	shift, and go to state 129
    RIGHT_OP	shift, and go to state 130

    $default	reduce using rule 37 (relational_expression)



state 190

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 32)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 33)
    relational_expression  ->  relational_expression GE_OP shift_expression .   (rule 38)

    LEFT_OP	shift, and go to state 129
    RIGHT_OP	shift, and go to state 130

    $default	reduce using rule 38 (relational_expression)



state 191

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 32)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 33)
    relational_expression  ->  relational_expression '<' shift_expression .   (rule 35)

    LEFT_OP	shift, and go to state 129
    RIGHT_OP	shift, and go to state 130

    $default	reduce using rule 35 (relational_expression)



state 192

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 32)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 33)
    relational_expression  ->  relational_expression '>' shift_expression .   (rule 36)

    LEFT_OP	shift, and go to state 129
    RIGHT_OP	shift, and go to state 130

    $default	reduce using rule 36 (relational_expression)



state 193

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 35)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 36)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 37)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 38)
    equality_expression  ->  equality_expression EQ_OP relational_expression .   (rule 40)

    LE_OP	shift, and go to state 131
    GE_OP	shift, and go to state 132
    '<' 	shift, and go to state 133
    '>' 	shift, and go to state 134

    $default	reduce using rule 40 (equality_expression)



state 194

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 35)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 36)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 37)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 38)
    equality_expression  ->  equality_expression NE_OP relational_expression .   (rule 41)

    LE_OP	shift, and go to state 131
    GE_OP	shift, and go to state 132
    '<' 	shift, and go to state 133
    '>' 	shift, and go to state 134

    $default	reduce using rule 41 (equality_expression)



state 195

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 40)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 41)
    and_expression  ->  and_expression '&' equality_expression .   (rule 43)

    EQ_OP	shift, and go to state 135
    NE_OP	shift, and go to state 136

    $default	reduce using rule 43 (and_expression)



state 196

    and_expression  ->  and_expression . '&' equality_expression   (rule 43)
    exclusive_or_expression  ->  exclusive_or_expression '^' and_expression .   (rule 45)

    '&' 	shift, and go to state 137

    $default	reduce using rule 45 (exclusive_or_expression)



state 197

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 45)
    inclusive_or_expression  ->  inclusive_or_expression '|' exclusive_or_expression .   (rule 47)

    '^' 	shift, and go to state 138

    $default	reduce using rule 47 (inclusive_or_expression)



state 198

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 47)
    logical_and_expression  ->  logical_and_expression AND_OP inclusive_or_expression .   (rule 49)

    '|' 	shift, and go to state 139

    $default	reduce using rule 49 (logical_and_expression)



state 199

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 49)
    logical_or_expression  ->  logical_or_expression OR_OP logical_and_expression .   (rule 51)

    AND_OP	shift, and go to state 140

    $default	reduce using rule 51 (logical_or_expression)



state 200

    labeled_statement  ->  IDENTIFIER ':' statement .   (rule 122)

    $default	reduce using rule 122 (labeled_statement)



state 201

    labeled_statement  ->  CASE logical_or_expression ':' . statement   (rule 123)

    IDENTIFIER	shift, and go to state 64
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    CASE	shift, and go to state 65
    IF  	shift, and go to state 66
    SWITCH	shift, and go to state 67
    WHILE	shift, and go to state 68
    DO  	shift, and go to state 69
    FOR 	shift, and go to state 70
    GOTO	shift, and go to state 71
    CONTINUE	shift, and go to state 72
    BREAK	shift, and go to state 73
    RETURN	shift, and go to state 74
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ';' 	shift, and go to state 75
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 78
    statement	go to state 228
    labeled_statement	go to state 81
    compound_statement	go to state 82
    expression_statement	go to state 85
    selection_statement	go to state 86
    iteration_statement	go to state 87
    jump_statement	go to state 88



state 202

    expression  ->  expression . ',' assignment_expression   (rule 66)
    selection_statement  ->  IF '(' expression . ')' statement   (rule 132)
    selection_statement  ->  IF '(' expression . ')' statement ELSE statement   (rule 133)

    ',' 	shift, and go to state 158
    ')' 	shift, and go to state 229



state 203

    expression  ->  expression . ',' assignment_expression   (rule 66)
    selection_statement  ->  SWITCH '(' expression . ')' statement   (rule 134)

    ',' 	shift, and go to state 158
    ')' 	shift, and go to state 230



state 204

    expression  ->  expression . ',' assignment_expression   (rule 66)
    iteration_statement  ->  WHILE '(' expression . ')' statement   (rule 135)

    ',' 	shift, and go to state 158
    ')' 	shift, and go to state 231



state 205

    iteration_statement  ->  DO statement WHILE . '(' expression ')' ';'   (rule 136)

    '(' 	shift, and go to state 232



state 206

    iteration_statement  ->  FOR '(' declaration . expression_statement ')' statement   (rule 139)
    iteration_statement  ->  FOR '(' declaration . expression_statement expression ')' statement   (rule 140)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ';' 	shift, and go to state 75
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 78
    expression_statement	go to state 233



state 207

    iteration_statement  ->  FOR '(' expression_statement . expression_statement ')' statement   (rule 137)
    iteration_statement  ->  FOR '(' expression_statement . expression_statement expression ')' statement   (rule 138)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ';' 	shift, and go to state 75
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 78
    expression_statement	go to state 234



state 208

    jump_statement  ->  GOTO IDENTIFIER ';' .   (rule 141)

    $default	reduce using rule 141 (jump_statement)



state 209

    jump_statement  ->  RETURN expression ';' .   (rule 145)

    $default	reduce using rule 145 (jump_statement)



state 210

    expression  ->  expression ',' assignment_expression .   (rule 66)

    $default	reduce using rule 66 (expression)



state 211

    abstract_declarator  ->  '[' ']' .   (rule 94)

    $default	reduce using rule 94 (abstract_declarator)



state 212

    abstract_declarator  ->  '[' '*' . ']'   (rule 98)

    ']' 	shift, and go to state 235



state 213

    abstract_declarator  ->  '[' assignment_expression . ']'   (rule 95)

    ']' 	shift, and go to state 236



state 214

    abstract_declarator  ->  '(' ')' .   (rule 100)

    $default	reduce using rule 100 (abstract_declarator)



state 215

    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 87)
    abstract_declarator  ->  '(' parameter_list . ')'   (rule 101)

    ',' 	shift, and go to state 165
    ')' 	shift, and go to state 237



state 216

    abstract_declarator  ->  '(' abstract_declarator . ')'   (rule 93)
    abstract_declarator  ->  abstract_declarator . '[' ']'   (rule 96)
    abstract_declarator  ->  abstract_declarator . '[' assignment_expression ']'   (rule 97)
    abstract_declarator  ->  abstract_declarator . '[' '*' ']'   (rule 99)
    abstract_declarator  ->  abstract_declarator . '(' ')'   (rule 102)
    abstract_declarator  ->  abstract_declarator . '(' parameter_list ')'   (rule 103)

    '[' 	shift, and go to state 217
    '(' 	shift, and go to state 218
    ')' 	shift, and go to state 238



state 217

    abstract_declarator  ->  abstract_declarator '[' . ']'   (rule 96)
    abstract_declarator  ->  abstract_declarator '[' . assignment_expression ']'   (rule 97)
    abstract_declarator  ->  abstract_declarator '[' . '*' ']'   (rule 99)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ']' 	shift, and go to state 239
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '*' 	shift, and go to state 240
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 241



state 218

    abstract_declarator  ->  abstract_declarator '(' . ')'   (rule 102)
    abstract_declarator  ->  abstract_declarator '(' . parameter_list ')'   (rule 103)

    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    ')' 	shift, and go to state 242

    type_specifier	go to state 91
    parameter_list	go to state 243
    parameter_declaration	go to state 93



state 219

    parameter_list  ->  parameter_list ',' parameter_declaration .   (rule 87)

    $default	reduce using rule 87 (parameter_list)



state 220

    identifier_list  ->  identifier_list ',' IDENTIFIER .   (rule 92)

    $default	reduce using rule 92 (identifier_list)



state 221

    designator  ->  '[' logical_or_expression ']' .   (rule 114)

    $default	reduce using rule 114 (designator)



state 222

    initializer  ->  '{' initializer_list ',' '}' .   (rule 106)

    $default	reduce using rule 106 (initializer)



state 223

    initializer_list  ->  initializer_list ',' initializer .   (rule 109)

    $default	reduce using rule 109 (initializer_list)



state 224

    initializer_list  ->  initializer_list ',' designation . initializer   (rule 110)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 43
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 59
    initializer	go to state 244



state 225

    postfix_expression  ->  postfix_expression '[' expression ']' .   (rule 9)

    $default	reduce using rule 9 (postfix_expression)



state 226

    argument_expression_list  ->  argument_expression_list ',' . assignment_expression   (rule 15)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 245



state 227

    postfix_expression  ->  postfix_expression '(' argument_expression_list ')' .   (rule 11)

    $default	reduce using rule 11 (postfix_expression)



state 228

    labeled_statement  ->  CASE logical_or_expression ':' statement .   (rule 123)

    $default	reduce using rule 123 (labeled_statement)



state 229

    selection_statement  ->  IF '(' expression ')' . statement   (rule 132)
    selection_statement  ->  IF '(' expression ')' . statement ELSE statement   (rule 133)

    IDENTIFIER	shift, and go to state 64
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    CASE	shift, and go to state 65
    IF  	shift, and go to state 66
    SWITCH	shift, and go to state 67
    WHILE	shift, and go to state 68
    DO  	shift, and go to state 69
    FOR 	shift, and go to state 70
    GOTO	shift, and go to state 71
    CONTINUE	shift, and go to state 72
    BREAK	shift, and go to state 73
    RETURN	shift, and go to state 74
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ';' 	shift, and go to state 75
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 78
    statement	go to state 246
    labeled_statement	go to state 81
    compound_statement	go to state 82
    expression_statement	go to state 85
    selection_statement	go to state 86
    iteration_statement	go to state 87
    jump_statement	go to state 88



state 230

    selection_statement  ->  SWITCH '(' expression ')' . statement   (rule 134)

    IDENTIFIER	shift, and go to state 64
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    CASE	shift, and go to state 65
    IF  	shift, and go to state 66
    SWITCH	shift, and go to state 67
    WHILE	shift, and go to state 68
    DO  	shift, and go to state 69
    FOR 	shift, and go to state 70
    GOTO	shift, and go to state 71
    CONTINUE	shift, and go to state 72
    BREAK	shift, and go to state 73
    RETURN	shift, and go to state 74
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ';' 	shift, and go to state 75
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 78
    statement	go to state 247
    labeled_statement	go to state 81
    compound_statement	go to state 82
    expression_statement	go to state 85
    selection_statement	go to state 86
    iteration_statement	go to state 87
    jump_statement	go to state 88



state 231

    iteration_statement  ->  WHILE '(' expression ')' . statement   (rule 135)

    IDENTIFIER	shift, and go to state 64
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    CASE	shift, and go to state 65
    IF  	shift, and go to state 66
    SWITCH	shift, and go to state 67
    WHILE	shift, and go to state 68
    DO  	shift, and go to state 69
    FOR 	shift, and go to state 70
    GOTO	shift, and go to state 71
    CONTINUE	shift, and go to state 72
    BREAK	shift, and go to state 73
    RETURN	shift, and go to state 74
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ';' 	shift, and go to state 75
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 78
    statement	go to state 248
    labeled_statement	go to state 81
    compound_statement	go to state 82
    expression_statement	go to state 85
    selection_statement	go to state 86
    iteration_statement	go to state 87
    jump_statement	go to state 88



state 232

    iteration_statement  ->  DO statement WHILE '(' . expression ')' ';'   (rule 136)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 249



state 233

    iteration_statement  ->  FOR '(' declaration expression_statement . ')' statement   (rule 139)
    iteration_statement  ->  FOR '(' declaration expression_statement . expression ')' statement   (rule 140)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44
    ')' 	shift, and go to state 250

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 251



state 234

    iteration_statement  ->  FOR '(' expression_statement expression_statement . ')' statement   (rule 137)
    iteration_statement  ->  FOR '(' expression_statement expression_statement . expression ')' statement   (rule 138)

    IDENTIFIER	shift, and go to state 32
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '(' 	shift, and go to state 44
    ')' 	shift, and go to state 252

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 253



state 235

    abstract_declarator  ->  '[' '*' ']' .   (rule 98)

    $default	reduce using rule 98 (abstract_declarator)



state 236

    abstract_declarator  ->  '[' assignment_expression ']' .   (rule 95)

    $default	reduce using rule 95 (abstract_declarator)



state 237

    abstract_declarator  ->  '(' parameter_list ')' .   (rule 101)

    $default	reduce using rule 101 (abstract_declarator)



state 238

    abstract_declarator  ->  '(' abstract_declarator ')' .   (rule 93)

    $default	reduce using rule 93 (abstract_declarator)



state 239

    abstract_declarator  ->  abstract_declarator '[' ']' .   (rule 96)

    $default	reduce using rule 96 (abstract_declarator)



state 240

    abstract_declarator  ->  abstract_declarator '[' '*' . ']'   (rule 99)

    ']' 	shift, and go to state 254



state 241

    abstract_declarator  ->  abstract_declarator '[' assignment_expression . ']'   (rule 97)

    ']' 	shift, and go to state 255



state 242

    abstract_declarator  ->  abstract_declarator '(' ')' .   (rule 102)

    $default	reduce using rule 102 (abstract_declarator)



state 243

    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 87)
    abstract_declarator  ->  abstract_declarator '(' parameter_list . ')'   (rule 103)

    ',' 	shift, and go to state 165
    ')' 	shift, and go to state 256



state 244

    initializer_list  ->  initializer_list ',' designation initializer .   (rule 110)

    $default	reduce using rule 110 (initializer_list)



state 245

    argument_expression_list  ->  argument_expression_list ',' assignment_expression .   (rule 15)

    $default	reduce using rule 15 (argument_expression_list)



state 246

    selection_statement  ->  IF '(' expression ')' statement .   (rule 132)
    selection_statement  ->  IF '(' expression ')' statement . ELSE statement   (rule 133)

    ELSE	shift, and go to state 257

    $default	reduce using rule 132 (selection_statement)



state 247

    selection_statement  ->  SWITCH '(' expression ')' statement .   (rule 134)

    $default	reduce using rule 134 (selection_statement)



state 248

    iteration_statement  ->  WHILE '(' expression ')' statement .   (rule 135)

    $default	reduce using rule 135 (iteration_statement)



state 249

    expression  ->  expression . ',' assignment_expression   (rule 66)
    iteration_statement  ->  DO statement WHILE '(' expression . ')' ';'   (rule 136)

    ',' 	shift, and go to state 158
    ')' 	shift, and go to state 258



state 250

    iteration_statement  ->  FOR '(' declaration expression_statement ')' . statement   (rule 139)

    IDENTIFIER	shift, and go to state 64
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    CASE	shift, and go to state 65
    IF  	shift, and go to state 66
    SWITCH	shift, and go to state 67
    WHILE	shift, and go to state 68
    DO  	shift, and go to state 69
    FOR 	shift, and go to state 70
    GOTO	shift, and go to state 71
    CONTINUE	shift, and go to state 72
    BREAK	shift, and go to state 73
    RETURN	shift, and go to state 74
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ';' 	shift, and go to state 75
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 78
    statement	go to state 259
    labeled_statement	go to state 81
    compound_statement	go to state 82
    expression_statement	go to state 85
    selection_statement	go to state 86
    iteration_statement	go to state 87
    jump_statement	go to state 88



state 251

    expression  ->  expression . ',' assignment_expression   (rule 66)
    iteration_statement  ->  FOR '(' declaration expression_statement expression . ')' statement   (rule 140)

    ',' 	shift, and go to state 158
    ')' 	shift, and go to state 260



state 252

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' . statement   (rule 137)

    IDENTIFIER	shift, and go to state 64
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    CASE	shift, and go to state 65
    IF  	shift, and go to state 66
    SWITCH	shift, and go to state 67
    WHILE	shift, and go to state 68
    DO  	shift, and go to state 69
    FOR 	shift, and go to state 70
    GOTO	shift, and go to state 71
    CONTINUE	shift, and go to state 72
    BREAK	shift, and go to state 73
    RETURN	shift, and go to state 74
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ';' 	shift, and go to state 75
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 78
    statement	go to state 261
    labeled_statement	go to state 81
    compound_statement	go to state 82
    expression_statement	go to state 85
    selection_statement	go to state 86
    iteration_statement	go to state 87
    jump_statement	go to state 88



state 253

    expression  ->  expression . ',' assignment_expression   (rule 66)
    iteration_statement  ->  FOR '(' expression_statement expression_statement expression . ')' statement   (rule 138)

    ',' 	shift, and go to state 158
    ')' 	shift, and go to state 262



state 254

    abstract_declarator  ->  abstract_declarator '[' '*' ']' .   (rule 99)

    $default	reduce using rule 99 (abstract_declarator)



state 255

    abstract_declarator  ->  abstract_declarator '[' assignment_expression ']' .   (rule 97)

    $default	reduce using rule 97 (abstract_declarator)



state 256

    abstract_declarator  ->  abstract_declarator '(' parameter_list ')' .   (rule 103)

    $default	reduce using rule 103 (abstract_declarator)



state 257

    selection_statement  ->  IF '(' expression ')' statement ELSE . statement   (rule 133)

    IDENTIFIER	shift, and go to state 64
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    CASE	shift, and go to state 65
    IF  	shift, and go to state 66
    SWITCH	shift, and go to state 67
    WHILE	shift, and go to state 68
    DO  	shift, and go to state 69
    FOR 	shift, and go to state 70
    GOTO	shift, and go to state 71
    CONTINUE	shift, and go to state 72
    BREAK	shift, and go to state 73
    RETURN	shift, and go to state 74
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ';' 	shift, and go to state 75
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 78
    statement	go to state 263
    labeled_statement	go to state 81
    compound_statement	go to state 82
    expression_statement	go to state 85
    selection_statement	go to state 86
    iteration_statement	go to state 87
    jump_statement	go to state 88



state 258

    iteration_statement  ->  DO statement WHILE '(' expression ')' . ';'   (rule 136)

    ';' 	shift, and go to state 264



state 259

    iteration_statement  ->  FOR '(' declaration expression_statement ')' statement .   (rule 139)

    $default	reduce using rule 139 (iteration_statement)



state 260

    iteration_statement  ->  FOR '(' declaration expression_statement expression ')' . statement   (rule 140)

    IDENTIFIER	shift, and go to state 64
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    CASE	shift, and go to state 65
    IF  	shift, and go to state 66
    SWITCH	shift, and go to state 67
    WHILE	shift, and go to state 68
    DO  	shift, and go to state 69
    FOR 	shift, and go to state 70
    GOTO	shift, and go to state 71
    CONTINUE	shift, and go to state 72
    BREAK	shift, and go to state 73
    RETURN	shift, and go to state 74
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ';' 	shift, and go to state 75
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 78
    statement	go to state 265
    labeled_statement	go to state 81
    compound_statement	go to state 82
    expression_statement	go to state 85
    selection_statement	go to state 86
    iteration_statement	go to state 87
    jump_statement	go to state 88



state 261

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' statement .   (rule 137)

    $default	reduce using rule 137 (iteration_statement)



state 262

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' . statement   (rule 138)

    IDENTIFIER	shift, and go to state 64
    CONSTANT_INT	shift, and go to state 33
    CONSTANT_DOUBLE	shift, and go to state 34
    INC_OP	shift, and go to state 35
    DEC_OP	shift, and go to state 36
    CASE	shift, and go to state 65
    IF  	shift, and go to state 66
    SWITCH	shift, and go to state 67
    WHILE	shift, and go to state 68
    DO  	shift, and go to state 69
    FOR 	shift, and go to state 70
    GOTO	shift, and go to state 71
    CONTINUE	shift, and go to state 72
    BREAK	shift, and go to state 73
    RETURN	shift, and go to state 74
    TRUE	shift, and go to state 37
    FALSE	shift, and go to state 38
    ';' 	shift, and go to state 75
    '!' 	shift, and go to state 39
    '~' 	shift, and go to state 40
    '-' 	shift, and go to state 41
    '+' 	shift, and go to state 42
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 44

    primary_expression	go to state 45
    postfix_expression	go to state 46
    unary_expression	go to state 47
    unary_operator	go to state 48
    multiplicative_expression	go to state 49
    additive_expression	go to state 50
    shift_expression	go to state 51
    relational_expression	go to state 52
    equality_expression	go to state 53
    and_expression	go to state 54
    exclusive_or_expression	go to state 55
    inclusive_or_expression	go to state 56
    logical_and_expression	go to state 57
    logical_or_expression	go to state 58
    assignment_expression	go to state 77
    expression	go to state 78
    statement	go to state 266
    labeled_statement	go to state 81
    compound_statement	go to state 82
    expression_statement	go to state 85
    selection_statement	go to state 86
    iteration_statement	go to state 87
    jump_statement	go to state 88



state 263

    selection_statement  ->  IF '(' expression ')' statement ELSE statement .   (rule 133)

    $default	reduce using rule 133 (selection_statement)



state 264

    iteration_statement  ->  DO statement WHILE '(' expression ')' ';' .   (rule 136)

    $default	reduce using rule 136 (iteration_statement)



state 265

    iteration_statement  ->  FOR '(' declaration expression_statement expression ')' statement .   (rule 140)

    $default	reduce using rule 140 (iteration_statement)



state 266

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' statement .   (rule 138)

    $default	reduce using rule 138 (iteration_statement)



state 267

    $   	go to state 268



state 268

    $   	go to state 269



state 269

    $default	accept
